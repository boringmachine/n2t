package VMtranslator;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.NoSuchElementException;
import java.util.Scanner;


public class Parser {
	File file;
	FileInputStream in;
	InputStreamReader reader;
	String command;
	String arg1;
	String arg2;
	StringBuilder data;
	
	static final int C_ARITHMETIC = 0x1;
	static final int C_PUSH = 0x2;
	static final int C_POP = 0x4;
	static final int C_LABEL = 0x8;
	static final int C_GOTO = 0x10;
	static final int C_IF = 0x20;
	static final int C_FUNCTION = 0x40;
	static final int C_RETURN = 0x80;
	static final int C_CALL = 0x100;
	
	Scanner scan;
	
	Parser(String filename) throws IOException{
		this.file = new File(filename);
		in = new FileInputStream(file);
		reader = new InputStreamReader(in);
		char[] data = new char[(int) file.length()];
		reader.read(data);
		this.data = new StringBuilder().append(
				(new String(data)).replaceAll("//.*\n?", ""));
		reader = new InputStreamReader(new ByteArrayInputStream(this.data.toString().getBytes(("UTF-8"))));
		scan = new Scanner(this.data.toString()).useDelimiter("\\p{Space}+");		
	}

	boolean hasMoreCommands(){
		return scan.hasNext(".+");
	}
	
	void advance(){
		try{
			command = scan.next();
		}catch(NoSuchElementException e){}
	}
	
	
	public static void main(String args[]) throws IOException{
		Parser a = new Parser("SimpleAdd.vm");
		System.out.println(a.data);
		while(a.hasMoreCommands()){
		    a.advance();
//			System.out.println("TYPE  :" + a.commandType());
			System.out.println("CMD   :" + a.command);
			System.out.println();
		}
	}	
}
