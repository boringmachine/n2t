package Assembler;

import java.util.LinkedHashMap;
import java.util.LinkedList;

public class SymbolTable extends LinkedHashMap<String, LinkedList<Integer>> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	SymbolTable() {
		for (int i = 0; i < 16; i++) {
			String key = "R" + Integer.toString(i);
			putValue(key, i);
		}
		
		putValue("SP", 0x0);
		putValue("LCL", 0x1);
		putValue("ARG", 0x2);
		putValue("THIS", 0x3);
		putValue("THAT", 0x4);
		putValue("SCREEN", 0x4000);
		putValue("KBD", 0x6000);
	}

	//TODO
	void addEntry(String symbol, Integer address) {
		if(!containsKey(symbol)){
			putValue(symbol, address);
		}else{
			remove(symbol);
			putValue(symbol, address);
		}
		
	}

	boolean contains(String symbol) {
		return containsKey(symbol);
	}

	int getAddress(String symbol) {
		return get(symbol);
	}
	
	void putValue(String key, Integer value){
		if(!containsKey(key)){
			put(key, new LinkedList<Integer>());
		}
		get(key).add(value);
	}
}
